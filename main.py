# –ò–º–ø–æ—Ä—Ç—ã –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import asyncio
from aiogram.fsm.storage.memory import MemoryStorage
import config
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
import logging
import random
from keyboards import keyboard

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=config.token)
dp = Dispatcher(bot=bot, storage=MemoryStorage())


# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä.   –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–∞ –æ –±–æ—Ç–µ
@dp.message(Command(commands=['start']))
async def start(message: types.Message):
    await message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! \n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç, —Ä–µ–ø–ª–∏–∫–∞–Ω—Ç —Ç—ã –∏–ª–∏ –Ω–µ—Ç.\n–ñ–º–∏ ¬´–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç¬ª, –µ—Å–ª–∏ –≥–æ—Ç–æ–≤ —É–∑–Ω–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.\n–ò–ª–∏ ¬´–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å¬ª ‚Äî –µ—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—Ç—Å—è –ø–æ–æ–±—â–∞—Ç—å—Å—è.',
        reply_markup=keyboard)


@dp.message(F.text == "–ò–Ω—Ñ–æ")
async def info(message: types.Message):
    await message.answer(
        "üìò *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ*\n\n"
        "   –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –ø–æ –º–æ—Ç–∏–≤–∞–º —Ñ–∏–ª—å–º–∞ _¬´–ë–µ–≥—É—â–∏–π –ø–æ –ª–µ–∑–≤–∏—é 2049¬ª_.\n"
        "–í —Ü–µ–Ω—Ç—Ä–µ –∏—Å—Ç–æ—Ä–∏–∏ ‚Äî —Ç–µ—Å—Ç –í–æ–π—Ç–∞-–ö–∞–º–ø—Ñ–∞, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è —Ä–µ–ø–ª–∏–∫–∞–Ω—Ç–æ–≤ ‚Äî "
        "–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤, –≤–Ω–µ—à–Ω–µ –Ω–µ–æ—Ç–ª–∏—á–∏–º—ã—Ö –æ—Ç –ª—é–¥–µ–π.\n\n"
        "   –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏, —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ —Å–æ—á—É–≤—Å—Ç–≤–∏—é –∏ —Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã–º —á—É–≤—Å—Ç–≤–∞–º. "
        "–†–µ–ø–ª–∏–∫–∞–Ω—Ç—ã, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–µ —É–º–µ—é—Ç –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —Å–æ–ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å ‚Äî –∏ —ç—Ç–æ –≤—ã–¥–∞–µ—Ç –∏—Ö.\n\n"
        "   –≠—Ç–æ—Ç –±–æ—Ç ‚Äî –∏–≥—Ä–æ–≤–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ç–µ—Å—Ç–∞. –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –∏ —É–∑–Ω–∞—Ç—å, "
        "–∫—Ç–æ —Ç—ã ‚Äî —á–µ–ª–æ–≤–µ–∫ –∏–ª–∏ —Ä–µ–ø–ª–∏–∫–∞–Ω—Ç.\n\n"
        "   –°–æ–∑–¥–∞–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ª–∏—á–Ω–æ–≥–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º.\n\n"
        "üë§ –ê–≤—Ç–æ—Ä: *–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥*\n"
        "_–ü–æ –º–æ—Ç–∏–≤–∞–º –≤—Å–µ–ª–µ–Ω–Ω–æ–π Blade Runner._",
        parse_mode="Markdown"
    )


@dp.message(Command(commands=['stop']))
async def start(message: types.Message):
    await message.answer(f'–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {message.from_user.full_name}!')


# –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
